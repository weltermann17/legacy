<configuration debug="false">
	<if
		condition='property("haploid.logging.console.enable").equalsIgnoreCase("true")'>
		<then>
			<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
				<encoder>
					<pattern>${haploid.logging.console.pattern}</pattern>
				</encoder>
				<filter class="com.ibm.haploid.logging.LoggerNameFilter" />
			</appender>
		</then>
	</if>
	<if
		condition='property("haploid.logging.plain-text.enable").equalsIgnoreCase("true")'>
		<then>
			<appender name="PLAINTEXT"
				class="ch.qos.logback.core.rolling.RollingFileAppender">
				<file>${haploid.logging.plain-text.file}</file>
				<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
					<fileNamePattern>${haploid.logging.plain-text.rolling-pattern}
					</fileNamePattern>
					<cleanHistoryOnStart>true</cleanHistoryOnStart>
				</rollingPolicy>
				<encoder>
					<pattern>${haploid.logging.plain-text.pattern}</pattern>
				</encoder>
				<filter class="com.ibm.haploid.logging.LoggerNameFilter" />
			</appender>
		</then>
	</if>
	<if condition='property("haploid.logging.html.enable").equalsIgnoreCase("true")'>
		<then>
			<appender name="HTML"
				class="ch.qos.logback.core.rolling.RollingFileAppender">
				<file>${haploid.logging.html.file}</file>
				<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
					<fileNamePattern>${haploid.logging.html.rolling-pattern}
					</fileNamePattern>
					<cleanHistoryOnStart>true</cleanHistoryOnStart>
				</rollingPolicy>
				<encoder class="ch.qos.logback.core.encoder.LayoutWrappingEncoder">
					<layout class="ch.qos.logback.classic.html.HTMLLayout">
						<pattern><![CDATA[%level%relative%replace(%replace(%replace(%replace(%replace(%replace(%msg){'&', '&amp;'}){'<', '&lt;'}){'>', '&gt;'}){'\n','<br>'}){'"', '&quot;'}){'\'', '&apos;'}%logger%X{sourceThread}]]></pattern>
					</layout>
				</encoder>
				<filter class="com.ibm.haploid.logging.LoggerNameFilter" />
			</appender>
		</then>
	</if>
	<root level="${rootLevel:-DEBUG}">
		<if
			condition='property("haploid.logging.console.enable").equalsIgnoreCase("true")'>
			<then>
				<appender-ref ref="STDOUT" />
			</then>
		</if>
		<if
			condition='property("haploid.logging.plain-text.enable").equalsIgnoreCase("true")'>
			<then>
				<appender-ref ref="PLAINTEXT" />
			</then>
		</if>
		<if condition='property("haploid.logging.html.enable").equalsIgnoreCase("true")'>
			<then>
				<appender-ref ref="HTML" />
			</then>
		</if>
	</root>
	<logger name="akka" level="WARN" />
	<logger name="cc.spray" level="WARN" />
</configuration>

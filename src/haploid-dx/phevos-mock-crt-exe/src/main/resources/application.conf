akka.log-level = "DEBUG"

###############################################
# Haploid / Phevos MockUp for CRT Config File #
###############################################

haploid {
	
	# Bootstrapper section, used to define the main object of the executable
	
	bootstrapper {
	
		main-class = "eu.man.phevos.mock.crt.Main"
		
	}
	
	# Section of the rest server
	
	rest {
	
		server-host = localhost
		
		server-port = 8082
		
		server-service = eu.man.phevos.mock.crt.CrtService
		
	}
	
}

phevos {

	crt {
		
		# This section groups the basic settings for the embedded ApacheFTP server
		
		ftp {
		
			# Start an embedded (apache) FTP server to serve a unload file
			
			use-embedded-ftpserver = true
			
			# Port used by the embedded FTP server for incoming FTP requests
			
			port = 3000
			
			# Ports used for passive FTP transfer
			
			passive-ports = "3010-3049"
			
			# User for the login to the embedded FTP server (anonymous login is not supported !)			
			
			user = crt-user
			
			# Password fot the login the embedded FTP server
			
			password = crt-user
			
			# The home directory after a successful connection. This has to point to folder where CRT_UNLOAD_DTEAM_YYMMDD_hhmmss are stored.
			
			root-dir = "crt"
			
		}
		
		# This section groups the basic settings to connect to the MQ broker
		
		jms	{
		
			# If true, an embedded ActiveMQ JMS Broker is used. If set to false and the url is pointing to
			# a local host, you need to start the broker seperatly. 
			# The embedded ActiveMQ broker has the advantage that no further package/program is needed, the
			# disadvantage is, that he has no admin site like the one of th e stand alone broker.
			# (URl of the admin site is: http://localhost:8161/admin/)
			
			use-embedded-broker = true
			
			# The url of the JMS broker
			
			url = "tcp://localhost:61616"
		
			# The name of the mockup client, has to be unique
			
			client-name = "phevos_mockup_crt"
		
			# The name of the input queue of the broker for requests to SADIS
			
			request-queue = "WWW.LCA.SADIS.OTMA"
		
			# The name of the output queue of the broker for responses from SADIS
			
			response-queue = "WWW.LCA.SADIS.ANTWORT"
		}
		
	}
	
}


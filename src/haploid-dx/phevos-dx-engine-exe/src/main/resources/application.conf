#
# haploid specific configuration
#
haploid {

	bootstrapper {
		main-class = eu.man.phevos.dx.engine.Engine
		restart = on
		pause-before-restart = 10 s
		jvm-options = [ "-Xss8m", "-Xms512m", "-Xmx1g", "-XX:+UnlockExperimentalVMOptions", "-XX:+UseG1GC", "-XX:MaxGCPauseMillis=200" ]	
	}
	
	rest {
		server-host = localhost
		# server-host = am1hl042.dc.man.lan
		server-port = 7000
		server-service = eu.man.phevos.dx.engine.EngineMonitor
	}

	core {
		application-directory = /tmp/phevos-dx
		log-level = DEBUG
		# log-console-to-file = off
	}
	
	dx.engine.domain.operating {
		encode-output-with-base64 = off
	}

}

#
# phevos-dx specific configuration
#
phevos.dx { 
	unload { 
		folder = ${haploid.core.application-directory}/unload
		file = CRT_UNLOAD_DTEAM_TEST.xml
		interval = 300 s
	}
	
	improve {
		
		ticket.project = "367"		
	
	}
	
	engine.domain {	
		jobs {
			collect-job-timeout = 300 s
		}
		operating {
			path-to-catstart-windows-am1hl042 = "E:\\CatiaV5\\B19SP06HF06\\win_b64\\code\\bin\\CATSTART.exe"
			crt.update-crt = off
			improve.send-ticket = on
			
			catiav5 {
					
				server = "mndemucpenoa.mn-man.biz:34000"
				
				user = "enovia"
				
				role = "VPMADMIN.MAN BUS.DEFAULT"
			
				password = "enovia"
				
			} 
		}
	}
} 

#
# What we want in spray to be special
#
spray {

	#
	# Continue with processing when http header has errors
	#
	relaxed-header-parsing = on 

}

#
# What we want in akka to be special
#
akka {

	event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
	
	actor {
		default-dispatcher {
			fork-join-executor {
				parallelism-factor = 6.0
				parallelism-min = 32
				parallelism-max = 256
			}
		}
		
		debug.fsm = off
        debug.lifecycle = off
	}				
	
}
	
